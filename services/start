#!/bin/bash

# A rewrite of all services into one. Doesn't work because the advertisement
# function has a loop that blocks the rest of the app to run. Saved for 
# possible rewrite in JavaScript.

source ../commonUtils

function allowPriorityPlayer() {
  date=$( TZ=America/Los_Angeles date +'%Y-%m-%d_%H:%M' )
  steamId=$1
  numPlayers=$( getNumPlayers )
  error=$( echo "$numPlayers" | grep -c Error )

  if [ $error -gt 0 ]; then
    echo "API isn't working. Exiting function..."
    return
  fi

  sleep 2

  # Kick non-priority players past the 6th player.
  if [[ $numPlayers > 6 ]]; then
    if $( ! isPriorityPlayer $steamId ); then
      $MOD_DIR/helper_functions/autoKick $steamId "Server full"
      echo "[$date] ($steamId) Kicked (Server full)" >> $MOD_DIR/logs/userConnections.log
    fi
  fi
}

function handleChatMessage() {
  echo "$LINE" >> $MOD_DIR/logs/userChat.log
}

function handleUserConnect() {
  steamName0=$( echo $LINE | grep -oP "PlayerName: ([^\"]).+" )
  steamId0=$( echo $LINE | grep -oP "Client: \w+ PlayerGUID\: (?:765?)[^\s]+" )
  steamName=${steamName0:12:-1}
  steamId=${steamId0:35}

  displayMsg="$steamName connected."

  echo "[$date] ($steamId) $displayMsg" >> $MOD_DIR/logs/userConnections.log
  
  # Ouput to chat
  # if [[ ! $steamId == "76561197993336390" ]]; then
  #   rconn "say $displayMsg"
  # fi

  allowPriorityPlayer $steamId
}

function handleUserDisconnect() {
  steamName=$( getSteamNameFromId $steamId )
  steamId=$( echo $LINE | grep -oP "765\d*" )

  displayMsg="$steamName disconnected."

  echo "[$date] ($steamId) ${displayMsg}" >> $MOD_DIR/logs/userConnections.log

  # Ouput to chat
  # if [[ ! $steamId == "76561197993336390" ]]; then
  #   rconn "say $displayMsg"
  # fi
}

function handleAdvertisement() {
  # This file will contain the adverts that will appear on your server
  FILE=$MOD_DIR/config/adMessages.txt

  COMMAND="rcon -H $RCON_IP -p $RCON_PORT -P $RCON_PWD"

  # Time between adverts (in seconds)
  INTERVAL=35

  # Initial value for counter
  i=1

  # Number of times to output all advertisements
  END=5
  x=$END

  while [ $x -gt 0 ];
  do
    # Refreshes the number of lines on every main loop iteration.
    FILELINES=$(wc -l < $FILE)
    # Counter loop, sends every line of the Adverts.txt one by one to the 
    # server via rcon.
    until [ $i -gt $FILELINES ]
    do
      # I use cut with the counter to get every line one by one on every 
      # iteration, until it reaches maximum number of lines and resets 
      # the counter to the first one.
      # echo -ne "\r\033[K$(cut -f$i -d$'\n' $FILE)"
      $COMMAND "say $(cut -f$i -d$'\n' $FILE)"

      i=$(( i+1 ))
      sleep $INTERVAL
      x=$(( $x-1 ))
    done
    # Resets the counter when the counter loops reaches $FILELINES.
    i=1
  done
}

function abortOnLowPlayerCount() {
  numPlayers=$( getNumPlayers )
  if [ $numPlayers -le 3 ]; then
    $MOD_DIR/helper_functions/killTimer
    rconn "gamemodeproperty ObjectiveCaptureTime 30"
    echo -e "\n$numPlayers players detected. Timer killed. Normal checkpoint timer."
  fi
}

function startTimer() {
  extendTimer=$1
  $extendtimer
  $MOD_DIR/helper_functions/countdown &
}

function handleObjectiveLock() {
  objType=$1
  $MOD_DIR/helper_functions/killTimer

  extendTimer=""
  if [[ $objType == "firstObj" ]]; then
    extendTimer=$( sleep 3 ) # Match sleep with PreRoundTimer in Game.ini
  fi

  startTimer $extendtimer
  abortOnLowPlayerCount
}

# Initialization
# If timer was never stopped, stop it before this script begins.
$MOD_DIR/helper_functions/killTimer

tail -n 0 -F $SERVER_LOG_DIR | \

# Main loop
while read -r LINE; do
  date=$( TZ=America/Los_Angeles date +'%Y-%m-%d_%H:%M' )
  onChatMessage="LogChat: Display: "
  onUserConnect="\[Linux\]\[EAC Server\] \[Info\]\[RegisterClient\] Client"
  onUserDisconnect="\[UnregisterClient\] Client: 0x([A-Za-z0-9_]*) PlayerGUID: "

  # onFirstRoundStart="Match State Changed from GameStarting to PreRound"
  # onRestartRound="Match State Changed from RoundActive to PreRound"
  # onNextRound="Match State Changed from PostRound to PreRound"
  onRoundStart="Match State Changed from (GameStarting|RoundActive|PostRound) to PreRound"
  onObjectiveCapture="Advancing spawns for faction 255 to obj [1-9]: 1 zones enabled"

  if [[ $LINE =~ $chatMessage ]]; then
    # handleChatMessage
  fi

  if [[ $LINE =~ $onUserConnect ]]; then
    # handleUserConnect
  fi

  if [[ $LINE =~ $onUserDisconnect ]]; then
    # handleUserDisconnect
  fi

  if [[ ($LINE =~ $onRoundStart) || ($LINE =~ $onObjectiveCapture) ]]; then

    objType=""
    if [[ $LINE =~ $onRoundStart ]]; then
      objType="firstObj"
    fi

    handleObjectiveLock $objType
    # handleAdvertisement # Has a blocking timer
  fi
done

